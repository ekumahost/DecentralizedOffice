const response = require('../../action/response');
const md5 = require('md5');

const Web3 = require('web3');
let web3 = new Web3(new Web3.providers.HttpProvider(process.env.http_provider));
const compoundCETHContractAddress = process.env.compoundCETHContractAddress;
const compoundProtocolAbiJson = [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"mint","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"reserveFactorMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"exchangeRateStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingAdmin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOfUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getCash","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newComptroller","type":"address"}],"name":"_setComptroller","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalBorrows","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"repayBorrow","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"comptroller","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"reduceAmount","type":"uint256"}],"name":"_reduceReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"initialExchangeRateMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"accrualBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"totalBorrowsCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"redeemAmount","type":"uint256"}],"name":"redeemUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"accrueInterest","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"borrowIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"borrower","type":"address"},{"name":"cTokenCollateral","type":"address"}],"name":"liquidateBorrow","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"supplyRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"liquidator","type":"address"},{"name":"borrower","type":"address"},{"name":"seizeTokens","type":"uint256"}],"name":"seize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newPendingAdmin","type":"address"}],"name":"_setPendingAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"exchangeRateCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getAccountSnapshot","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"borrowAmount","type":"uint256"}],"name":"borrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"redeemTokens","type":"uint256"}],"name":"redeem","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"borrower","type":"address"}],"name":"repayBorrowBehalf","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"_acceptAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newInterestRateModel","type":"address"}],"name":"_setInterestRateModel","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"interestRateModel","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"borrowRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newReserveFactorMantissa","type":"uint256"}],"name":"_setReserveFactor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isCToken","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"comptroller_","type":"address"},{"name":"interestRateModel_","type":"address"},{"name":"initialExchangeRateMantissa_","type":"uint256"},{"name":"name_","type":"string"},{"name":"symbol_","type":"string"},{"name":"decimals_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"interestAccumulated","type":"uint256"},{"indexed":false,"name":"borrowIndex","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"AccrueInterest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minter","type":"address"},{"indexed":false,"name":"mintAmount","type":"uint256"},{"indexed":false,"name":"mintTokens","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"redeemer","type":"address"},{"indexed":false,"name":"redeemAmount","type":"uint256"},{"indexed":false,"name":"redeemTokens","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"borrowAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"payer","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"RepayBorrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"liquidator","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"cTokenCollateral","type":"address"},{"indexed":false,"name":"seizeTokens","type":"uint256"}],"name":"LiquidateBorrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldPendingAdmin","type":"address"},{"indexed":false,"name":"newPendingAdmin","type":"address"}],"name":"NewPendingAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldAdmin","type":"address"},{"indexed":false,"name":"newAdmin","type":"address"}],"name":"NewAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldComptroller","type":"address"},{"indexed":false,"name":"newComptroller","type":"address"}],"name":"NewComptroller","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldInterestRateModel","type":"address"},{"indexed":false,"name":"newInterestRateModel","type":"address"}],"name":"NewMarketInterestRateModel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldReserveFactorMantissa","type":"uint256"},{"indexed":false,"name":"newReserveFactorMantissa","type":"uint256"}],"name":"NewReserveFactor","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"admin","type":"address"},{"indexed":false,"name":"reduceAmount","type":"uint256"},{"indexed":false,"name":"newTotalReserves","type":"uint256"}],"name":"ReservesReduced","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"error","type":"uint256"},{"indexed":false,"name":"info","type":"uint256"},{"indexed":false,"name":"detail","type":"uint256"}],"name":"Failure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Approval","type":"event"}];
const AaveLendingPoolAddressesProviderABI = [ { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "EthereumAddressUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "FeeProviderUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingPoolConfiguratorUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingPoolCoreUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingPoolDataProviderUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingPoolLiquidationManagerUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingPoolManagerUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingPoolParametersProviderUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingPoolUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "LendingRateOracleUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" } ], "name": "OwnershipTransferred", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "PriceOracleUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "internalType": "bytes32", "name": "id", "type": "bytes32" }, { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "ProxyCreated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "newAddress", "type": "address" } ], "name": "TokenDistributorUpdated", "type": "event" }, { "constant": true, "inputs": [ { "internalType": "bytes32", "name": "_key", "type": "bytes32" } ], "name": "getAddress", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "isOwner", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "owner", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [], "name": "renounceOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "newOwner", "type": "address" } ], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingPool", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_pool", "type": "address" } ], "name": "setLendingPoolImpl", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingPoolCore", "outputs": [ { "internalType": "address payable", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_lendingPoolCore", "type": "address" } ], "name": "setLendingPoolCoreImpl", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingPoolConfigurator", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_configurator", "type": "address" } ], "name": "setLendingPoolConfiguratorImpl", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingPoolDataProvider", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_provider", "type": "address" } ], "name": "setLendingPoolDataProviderImpl", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingPoolParametersProvider", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_parametersProvider", "type": "address" } ], "name": "setLendingPoolParametersProviderImpl", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getFeeProvider", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_feeProvider", "type": "address" } ], "name": "setFeeProviderImpl", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingPoolLiquidationManager", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_manager", "type": "address" } ], "name": "setLendingPoolLiquidationManager", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingPoolManager", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_lendingPoolManager", "type": "address" } ], "name": "setLendingPoolManager", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getPriceOracle", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_priceOracle", "type": "address" } ], "name": "setPriceOracle", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLendingRateOracle", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_lendingRateOracle", "type": "address" } ], "name": "setLendingRateOracle", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getTokenDistributor", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_tokenDistributor", "type": "address" } ], "name": "setTokenDistributor", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" } ];
const AaveLendingPoolABI = [ { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_borrowRateMode", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_borrowRate", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_originationFee", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_borrowBalanceIncrease", "type": "uint256" }, { "indexed": true, "internalType": "uint16", "name": "_referral", "type": "uint16" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "Borrow", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "indexed": true, "internalType": "uint16", "name": "_referral", "type": "uint16" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "Deposit", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_target", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_totalFee", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_protocolFee", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "FlashLoan", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_collateral", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_purchaseAmount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_liquidatedCollateralAmount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_accruedBorrowInterest", "type": "uint256" }, { "indexed": false, "internalType": "address", "name": "_liquidator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "_receiveAToken", "type": "bool" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "LiquidationCall", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_collateral", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_feeLiquidated", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_liquidatedCollateralForFee", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "OriginationFeeLiquidated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_newStableRate", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_borrowBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "RebalanceStableBorrowRate", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "RedeemUnderlying", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_repayer", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_amountMinusFees", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fees", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_borrowBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "Repay", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" } ], "name": "ReserveUsedAsCollateralDisabled", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" } ], "name": "ReserveUsedAsCollateralEnabled", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_reserve", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_user", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_newRateMode", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_newRate", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_borrowBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_timestamp", "type": "uint256" } ], "name": "Swap", "type": "event" }, { "constant": true, "inputs": [], "name": "LENDINGPOOL_REVISION", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "UINT_MAX_VALUE", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "addressesProvider", "outputs": [ { "internalType": "contract LendingPoolAddressesProvider", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "core", "outputs": [ { "internalType": "contract LendingPoolCore", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "dataProvider", "outputs": [ { "internalType": "contract LendingPoolDataProvider", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "parametersProvider", "outputs": [ { "internalType": "contract LendingPoolParametersProvider", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "contract LendingPoolAddressesProvider", "name": "_addressesProvider", "type": "address" } ], "name": "initialize", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "uint16", "name": "_referralCode", "type": "uint16" } ], "name": "deposit", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "address payable", "name": "_user", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "uint256", "name": "_aTokenBalanceAfterRedeem", "type": "uint256" } ], "name": "redeemUnderlying", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "uint256", "name": "_interestRateMode", "type": "uint256" }, { "internalType": "uint16", "name": "_referralCode", "type": "uint16" } ], "name": "borrow", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "address payable", "name": "_onBehalfOf", "type": "address" } ], "name": "repay", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" } ], "name": "swapBorrowRateMode", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "address", "name": "_user", "type": "address" } ], "name": "rebalanceStableBorrowRate", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "bool", "name": "_useAsCollateral", "type": "bool" } ], "name": "setUserUseReserveAsCollateral", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_collateral", "type": "address" }, { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "address", "name": "_user", "type": "address" }, { "internalType": "uint256", "name": "_purchaseAmount", "type": "uint256" }, { "internalType": "bool", "name": "_receiveAToken", "type": "bool" } ], "name": "liquidationCall", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_receiver", "type": "address" }, { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "bytes", "name": "_params", "type": "bytes" } ], "name": "flashLoan", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" } ], "name": "getReserveConfigurationData", "outputs": [ { "internalType": "uint256", "name": "ltv", "type": "uint256" }, { "internalType": "uint256", "name": "liquidationThreshold", "type": "uint256" }, { "internalType": "uint256", "name": "liquidationBonus", "type": "uint256" }, { "internalType": "address", "name": "interestRateStrategyAddress", "type": "address" }, { "internalType": "bool", "name": "usageAsCollateralEnabled", "type": "bool" }, { "internalType": "bool", "name": "borrowingEnabled", "type": "bool" }, { "internalType": "bool", "name": "stableBorrowRateEnabled", "type": "bool" }, { "internalType": "bool", "name": "isActive", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" } ], "name": "getReserveData", "outputs": [ { "internalType": "uint256", "name": "totalLiquidity", "type": "uint256" }, { "internalType": "uint256", "name": "availableLiquidity", "type": "uint256" }, { "internalType": "uint256", "name": "totalBorrowsStable", "type": "uint256" }, { "internalType": "uint256", "name": "totalBorrowsVariable", "type": "uint256" }, { "internalType": "uint256", "name": "liquidityRate", "type": "uint256" }, { "internalType": "uint256", "name": "variableBorrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "stableBorrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "averageStableBorrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "utilizationRate", "type": "uint256" }, { "internalType": "uint256", "name": "liquidityIndex", "type": "uint256" }, { "internalType": "uint256", "name": "variableBorrowIndex", "type": "uint256" }, { "internalType": "address", "name": "aTokenAddress", "type": "address" }, { "internalType": "uint40", "name": "lastUpdateTimestamp", "type": "uint40" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "name": "getUserAccountData", "outputs": [ { "internalType": "uint256", "name": "totalLiquidityETH", "type": "uint256" }, { "internalType": "uint256", "name": "totalCollateralETH", "type": "uint256" }, { "internalType": "uint256", "name": "totalBorrowsETH", "type": "uint256" }, { "internalType": "uint256", "name": "totalFeesETH", "type": "uint256" }, { "internalType": "uint256", "name": "availableBorrowsETH", "type": "uint256" }, { "internalType": "uint256", "name": "currentLiquidationThreshold", "type": "uint256" }, { "internalType": "uint256", "name": "ltv", "type": "uint256" }, { "internalType": "uint256", "name": "healthFactor", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_reserve", "type": "address" }, { "internalType": "address", "name": "_user", "type": "address" } ], "name": "getUserReserveData", "outputs": [ { "internalType": "uint256", "name": "currentATokenBalance", "type": "uint256" }, { "internalType": "uint256", "name": "currentBorrowBalance", "type": "uint256" }, { "internalType": "uint256", "name": "principalBorrowBalance", "type": "uint256" }, { "internalType": "uint256", "name": "borrowRateMode", "type": "uint256" }, { "internalType": "uint256", "name": "borrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "liquidityRate", "type": "uint256" }, { "internalType": "uint256", "name": "originationFee", "type": "uint256" }, { "internalType": "uint256", "name": "variableBorrowIndex", "type": "uint256" }, { "internalType": "uint256", "name": "lastUpdateTimestamp", "type": "uint256" }, { "internalType": "bool", "name": "usageAsCollateralEnabled", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getReserves", "outputs": [ { "internalType": "address[]", "name": "", "type": "address[]" } ], "payable": false, "stateMutability": "view", "type": "function" } ];
const AaveDAITokenABI = [ { "inputs": [ { "internalType": "contract LendingPoolAddressesProvider", "name": "_addressesProvider", "type": "address" }, { "internalType": "address", "name": "_underlyingAsset", "type": "address" }, { "internalType": "uint8", "name": "_underlyingAssetDecimals", "type": "uint8" }, { "internalType": "string", "name": "_name", "type": "string" }, { "internalType": "string", "name": "_symbol", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "spender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" } ], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_to", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_value", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_toBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromIndex", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_toIndex", "type": "uint256" } ], "name": "BalanceTransfer", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_from", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_value", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromIndex", "type": "uint256" } ], "name": "BurnOnLiquidation", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_to", "type": "address" } ], "name": "InterestRedirectionAllowanceChanged", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "_to", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_redirectedBalance", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromIndex", "type": "uint256" } ], "name": "InterestStreamRedirected", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_from", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_value", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromIndex", "type": "uint256" } ], "name": "MintOnDeposit", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_from", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_value", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_fromIndex", "type": "uint256" } ], "name": "Redeem", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "_targetAddress", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "_targetBalanceIncrease", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_targetIndex", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_redirectedBalanceAdded", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_redirectedBalanceRemoved", "type": "uint256" } ], "name": "RedirectedBalanceUpdated", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" } ], "name": "Transfer", "type": "event" }, { "constant": true, "inputs": [], "name": "UINT_MAX_VALUE", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" } ], "name": "allowance", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "value", "type": "uint256" } ], "name": "approve", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "decimals", "outputs": [ { "internalType": "uint8", "name": "", "type": "uint8" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "subtractedValue", "type": "uint256" } ], "name": "decreaseAllowance", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "addedValue", "type": "uint256" } ], "name": "increaseAllowance", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "name", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "symbol", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" } ], "name": "transfer", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" } ], "name": "transferFrom", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "underlyingAssetAddress", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_to", "type": "address" } ], "name": "redirectInterestStream", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_from", "type": "address" }, { "internalType": "address", "name": "_to", "type": "address" } ], "name": "redirectInterestStreamOf", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_to", "type": "address" } ], "name": "allowInterestRedirectionTo", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "uint256", "name": "_amount", "type": "uint256" } ], "name": "redeem", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_account", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" } ], "name": "mintOnDeposit", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_account", "type": "address" }, { "internalType": "uint256", "name": "_value", "type": "uint256" } ], "name": "burnOnLiquidation", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_from", "type": "address" }, { "internalType": "address", "name": "_to", "type": "address" }, { "internalType": "uint256", "name": "_value", "type": "uint256" } ], "name": "transferOnLiquidation", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "name": "balanceOf", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "name": "principalBalanceOf", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "totalSupply", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_user", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" } ], "name": "isTransferAllowed", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "name": "getUserIndex", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "name": "getInterestRedirectionAddress", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "name": "getRedirectedBalance", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" } ];
const compoundCEthContract = new web3.eth.Contract(compoundProtocolAbiJson, compoundCETHContractAddress);
// Company Ethereum wallet private key
const privateKey = process.env.walletPrivateKey;
// Adding company Ethereum wallet to the Web3 object
web3.eth.accounts.wallet.add('0x' + privateKey);
const companyWalletAddress = web3.eth.accounts.wallet[0].address;
// console.log('ACCOUNTS NI', web3.eth.accounts.wallet[0]);


 async function initCompoundSupply(ethValue){ // supply Ether to compound
    const supplyRatePerBlockMantissa = await compoundCEthContract.methods.supplyRatePerBlock().call();
    const interestPerEthThisBlock = supplyRatePerBlockMantissa / 1e18;
    console.log(`Each supplied ETH will increase by ${interestPerEthThisBlock}` +
        ` this block, based on the current interest rate.`);
    console.log('Supplying ETH to the Compound Protocol...');
    // Mint some cETH by supplying ETH to the Compound Protocol
    await compoundCEthContract.methods.mint().send({
        from: companyWalletAddress,
        gasLimit: web3.utils.toHex(250000), // 15..     // posted at compound.finance/developers#gas-costs
        gasPrice: web3.utils.toHex(40000000000), // 2... // use ethgasstation.info (mainnet only)
        // before we go live we must query network and get best gas fees.. ethgasstation.info
        value: web3.utils.toHex(web3.utils.toWei(ethValue.toString(), 'ether'))
    });
    console.log('cETH "Mint" operation successful.');
    // CAN QUIKLY CHECK cETH BALANCE..
    await getCETHBalance();

}




async function initAaveSupply(ethValue){ // supply Ether to aave

    const daiAmountinWei = web3.utils.toWei(ethValue.toString(), "ether").toString();
   // const daiAddress = '0x6B175474E89094C44Da98b954EedeAC495271d0F'; // mainnet DAI
    const daiAddress = '0x58AD4cB396411B691A9AAb6F74545b2C5217FE6a'; // kovan DAI
    const referralCode = '0';
    const userAddress = companyWalletAddress;
   // const lpAddressProviderAddress = '0x24a42fD28C976A61Df5D00D0599C34c4f90748c8'; // mainnet address, for other addresses: https://docs.aave.com/developers/developing-on-aave/deployed-contract-instances
    const lpAddressProviderAddress = '0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5';  // kovan
    const lpAddressProviderContract = new web3.eth.Contract(AaveLendingPoolAddressesProviderABI, lpAddressProviderAddress);
// Get the latest LendingPoolCore address
    const lpCoreAddress = await lpAddressProviderContract.methods
        .getLendingPoolCore()
        .call()
        .catch((e) => {
            throw Error(`Error getting lendingPool address: ${e.message}`)
        });

// Approve the LendingPoolCore address with the DAI contract
    const daiContract = new web3.eth.Contract(AaveDAITokenABI, daiAddress);
    await daiContract.methods
        .approve(
            lpCoreAddress,
            daiAmountinWei
        )
        .send()
        .catch((e) => {
            throw Error(`Error approving DAI allowance: ${e.message}`)
        })

// Get the latest LendingPool contract address
    const lpAddress = await lpAddressProviderContract.methods
        .getLendingPool()
        .call()
        .catch((e) => {
            throw Error(`Error getting lendingPool address: ${e.message}`)
        });

// Make the deposit transaction via LendingPool contract
    const lpContract = new web3.eth.Contract(AaveLendingPoolABI, lpAddress);
    await lpContract.methods
        .deposit(
           // daiAddress,
            userAddress,
            daiAmountinWei,
            referralCode
        )
        .send()
        .catch((e) => {
            throw Error(`Error depositing to the LendingPool contract: ${e.message}`)
        })


}


async function initYearnSupply(ethValue){ // supply Ether to yearn





}





 async function withdrawCETH(cTokenAmount=10){

     console.log('Redeeming the cETH for ETH...');

     console.log('Exchanging the given cETH based on cToken amount...');
     await compoundCEthContract.methods.redeem(cTokenAmount * 1e8).send({
         from: companyWalletAddress,
         gasLimit: web3.utils.toHex(250000),  // 15    // posted at compound.finance/developers#gas-costs
         gasPrice: web3.utils.toHex(40000000000), // 2 // use ethgasstation.info (mainnet only)
     });

     cTokenBalance = await compoundCEthContract.methods.balanceOf(companyWalletAddress).call();
     cTokenBalance = (cTokenBalance / 1e8).toString();
     console.log("My wallet's cETH Token Balance:", cTokenBalance);
}

async function getCETHBalance() { //  get balance of ETH and cETH after supply
    // we will get balance from front end before query
    const _balanceOfUnderlying = await compoundCEthContract.methods
        .balanceOfUnderlying(companyWalletAddress).call();
    let balanceOfUnderlying = web3.utils.fromWei(_balanceOfUnderlying).toString();
    console.log("ETH supplied to the Compound Protocol:", balanceOfUnderlying);
    const _cTokenBalance = await compoundCEthContract.methods.
    balanceOf(companyWalletAddress).call();
    let cTokenBalance = (_cTokenBalance / 1e8).toString();
    console.log("My wallet's cETH Token Balance:", cTokenBalance);

    let exchangeRateCurrent = await compoundCEthContract.methods.
    exchangeRateCurrent().call();
    exchangeRateCurrent = (exchangeRateCurrent / 1e28).toString();
    console.log("Current exchange rate from cETH to ETH:", exchangeRateCurrent);

}


module.exports =  {



    adminSupplyGroupCompoundEth(req, res){
     // THis Function lets admin supply Eth to Compound Protocol  for Investing to get cETh for the group
    // only admin can call this function, middleware will be implemented to lock

        // we will interact with compound cETH contract address
           //  initSupply(req.body.ethAmount).then((result) =>{
             initCompoundSupply(0.005).then((result) =>{
                 console.log('RESULT OF INIT SUPPLY', result);
                 response.successResponse(res, '', "Compound Supply Method hit", null);

             }).catch((err) => {
                 console.error("ERROR FROM INIT SUPPLY", err);
                 response.successResponse(res, err, "Compound supply errr", null);

             });

    },


    adminSupplyGroupAaveEth(req, res){

        initAaveSupply(0.005).then((result) =>{
            console.log('RESULT OF INIT SUPPLY', result);
            response.successResponse(res, '', "Aave Supply Method hit", null);

        }).catch((err) => {
            console.error("ERROR FROM INIT SUPPLY", err);
            response.successResponse(res, err, "Aave supply errr", null);

        });

    },




    adminSupplyGroupYearnEth(req, res){

        initYearnSupply(0.005).then((result) =>{
            console.log('RESULT OF INIT SUPPLY', result);
            response.successResponse(res, '', "Yearn Supply Method hit", null);

        }).catch((err) => {
            console.error("ERROR FROM INIT SUPPLY", err);
            response.successResponse(res, err, "Yearn supply errr", null);

        });

    },



    adminWithdrawGroupCompoundCEth(req, res){

        withdrawCETH(10).then((result) =>{
            console.log('RESULT OF INIT SUPPLY', result);
            response.successResponse(res, '', "Compound withdrawal success", null);

        }).catch((err) => {
            console.error("ERROR FROM withdraw SUPPLY", err);
            response.successResponse(res, err, "Compound withdraw errr", null);

        });

    },

};


